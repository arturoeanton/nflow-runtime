[pg_session]
url = ""


[redis]
host = ""
password = ""


[database_nflow]
driver = "sqlite3"
dsn = "../nflow/app/app.sqlite"
#driver = "postgres"
#dsn = "postgres://postgres:nflowsecret@localhost:5432/nflow?sslmode=disable"
query="SELECT name,query FROM queries"

[env]
scim_base = "https://localhost:8443"
openid_base = "https://localhost:8443"

[vm_pool]
max_size = 200              # Maximum VMs in pool (increased for 4x performance)
preload_size = 100          # VMs to create at startup (50% of max)
idle_timeout = 10          # Minutes before removing idle VMs
cleanup_interval = 5       # Minutes between cleanup runs
enable_metrics = true      # Log pool metrics

# Resource limits (seguridad)
max_memory_mb = 128        # Max memory per VM in MB (default: 128)
max_execution_seconds = 30 # Max execution time in seconds (default: 30)
max_operations = 1000000000  # Max JS operations (default: 10M)

# Sandbox settings (seguridad)
enable_filesystem = false  # Allow filesystem access (default: false)
enable_network = false     # Allow network access (default: false) 
enable_process = false     # Allow process access (default: false)

[tracker]
enabled = false            # Enable/disable tracker (default: false)
workers = 4               # Number of worker goroutines (default: 4)
batch_size = 100          # Batch size for database inserts (default: 100)
flush_interval = 250      # Flush interval in milliseconds (default: 250)
channel_buffer = 100000   # Channel buffer size (default: 100000)
verbose_logging = false   # Enable verbose logging (default: false)
stats_interval = 300      # Stats reporting interval in seconds (default: 300)

[debug]
enabled = false           # Enable debug endpoints (default: false)
auth_token = ""          # Optional auth token for debug endpoints (empty = no auth)
allowed_ips = ""         # Comma-separated allowed IPs (empty = all IPs allowed)
enable_pprof = false     # Enable Go pprof profiling endpoints

[monitor]
enabled = true                    # Enable monitoring endpoints (default: true)
health_check_path = "/health"     # Health check endpoint path
metrics_path = "/metrics"         # Prometheus metrics endpoint path
enable_detailed_metrics = false   # Include detailed metrics (CPU, memory, goroutines, etc.)
metrics_port = ""                # Separate port for metrics (empty = use main port)

[rate_limit]
enabled = false                   # Enable rate limiting (default: false)

# IP rate limiting configuration
ip_rate_limit = 100              # Requests per IP per window
ip_window_minutes = 1            # Time window in minutes
ip_burst_size = 10               # Burst size for IP limiting

# Storage backend
backend = "memory"               # "memory" or "redis"
cleanup_interval = 10            # Cleanup interval in minutes (memory backend)

# Response configuration
retry_after_header = true        # Include Retry-After header
error_message = "Rate limit exceeded. Please try again later."

# Exclusions (comma-separated)
excluded_ips = ""                # e.g., "127.0.0.1,192.168.1.0/24"
excluded_paths = "/health,/metrics"  # Paths to exclude from rate limiting